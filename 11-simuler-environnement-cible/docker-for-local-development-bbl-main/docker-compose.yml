version: "3.8"

# This docker compose file assumes that the local loopback (127.0.0.1)
# is bound to the hostname `kubernetes.docker.internal`
#
# For users that are using Docker Desktop (Windows, MacOs)
# They should already have the following binding in
# `/etc/hosts` or `c:/windows/system32/drivers/etc/hosts`
#
# Linux user will need to add it : `etc/hosts`
#
# 127.0.0.1 kubernetes.docker.internal

services:
  auth-server:
    # http://kubernetes.docker.internal:8080
    # admin / admin
    image: "quay.io/keycloak/keycloak:19.0.1"
    ports:
      - "8080:8080"
      - "8443:8443"
    env_file:
      - "keycloak-dev-8080-8443/.env.docker-compose"
    volumes:
      - "./keycloak-dev-8080-8443/data/import/:/opt/keycloak/data/import/"
    command:
      - "start-dev --import-realm"
  backend:
    # http://kubernetes.docker.internal:8081
    image: "maven:3-openjdk-17-slim"
    working_dir: "/backend"
    depends_on: ["auth-server"]
    volumes:
      - "./.volumes/backend-target:/backend/target"
      - "./backend-api-8081:/backend"
      - "./.volumes/backend-.m2:/root/.m2"
    ports:
      - "8081:8081"
    env_file:
      - "backend-api-8081/.env.docker-compose"
    command:
      - "mvn"
      - "-Dmaven.compiler.source=17"
      - "spring-boot:run"
  frontend:
    # http://kubernetes.docker.internal:5173
    # user / user
    image: "node:lts"
    working_dir: "/home/node/app"
    depends_on: ["auth-server"]
    volumes:
      - "./.volumes/frontend-node_modules:/home/node/app/node_modules"
      - "./frontend-app-5173:/home/node/app"
    ports:
      - "5173:5173"
    entrypoint: [ "bash", "-c" ]
    command:
      - "npm install && npm run dev -- --host --mode docker-compose"
